# 配置真实数据源
spring.shardingsphere.datasource.names=ds1,ds2

# 配置第 1 个数据源
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/sharding-sphere1?serverTimezone=UTC
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root

# 配置第 2 个数据源
spring.shardingsphere.datasource.ds2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds2.url=jdbc:mysql://localhost:3306/sharding-sphere2?serverTimezone=UTC
spring.shardingsphere.datasource.ds2.username=root
spring.shardingsphere.datasource.ds2.password=root

# 配置 t_order 表所在节点
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{1..2}.t_order_$->{1..2}
# 配置 t_order_detail 表所在节点
spring.shardingsphere.sharding.tables.t_order_detail.actual-data-nodes=ds$->{1..2}.t_order_detail_$->{1..2}

# 指定 t_order 表里主键id生成策略
spring.shardingsphere.sharding.tables.t_order.key-generator.column=id
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE
# 指定 t_order_detail 表里主键id生成策略
spring.shardingsphere.sharding.tables.t_order_detail.key-generator.column=id
spring.shardingsphere.sharding.tables.t_order_detail.key-generator.type=SNOWFLAKE

# 指定 t_order 表分片策略
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_${id % 2 + 1}
# 指定 t_order_detail 表分片策略
spring.shardingsphere.sharding.tables.t_order_detail.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order_detail.table-strategy.inline.algorithm-expression=t_order_detail_${order_id % 2 + 1}

# 配置绑定关系
spring.shardingsphere.sharding.binding-tables[0]=t_order,t_order_detail

# 打印SQL语句
spring.shardingsphere.props.sql.show=true